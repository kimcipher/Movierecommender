# -*- coding: utf-8 -*-
"""MovieRecommender.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LeNpkhtTY1wSkXxsaMvcVhzjN0VsdDTm
"""

# Recommneder system

# collaborative filtering - based on other people experiences and ratings
# content-based recommender -> done based on the customer experience


import pandas
user_item_details = pandas.read_csv("https://modcom.co.ke/datasets/file.csv")
user_item_details

# movie datasets

movie_details = pandas.read_csv("https://modcom.co.ke/datasets/Movie_Id_Titles.csv")
movie_details.head(50)

# merging two datasets
data = pandas.merge(user_item_details,movie_details, on='item_id')
data

# group by title , rating

data.groupby('title')['rating'].mean().sort_values(ascending=False)

data.groupby('title')['rating'].count().sort_values(ascending=False)

# store mean rating

mean_ratings = pandas.DataFrame(data.groupby('title')['rating'].mean())
mean_ratings

# column for number of ratings
mean_ratings['number_of_ratings'] = pandas.DataFrame(data.groupby('title')['rating'].count())
mean_ratings

# pivot table
# index, columns, values

pivot = data.pivot_table(index='user_id', columns='title', values='rating')
pivot

# movie selection

selected_movie = pivot['Batman (1989)']

similar = pivot.corrwith(selected_movie)
similar_df = pandas.DataFrame(similar, columns=['correlations'])
similar_df.sort_values('correlations', ascending=False)

# join similar_df with mean_ratings

similar_df = similar_df.join(mean_ratings['number_of_ratings'])
similar_df

# recommended movies
similar_df[similar_df['number_of_ratings'] > 200].sort_values('correlations', ascending=False).head(20)